%x SC_COMMENT

tMAIL Mail
tSCHEDULE schedule
tENDMAIL "end Mail"
tENDSCHEDULE "end schedule"
tSEND send
tTO to
tFROM from
tSET set
tCOMMA ","
tCOLON ":"
tLPR "("
tRPR ")"
tLBR "["
tRBR "]"
tAT "@"


tADDRESS [a-zA-Z0-9_\-]+([\.][a-zA-Z0-9_\-]+)*@[a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])*([\.][a-zA-Z0-9]([\-a-zA-Z0-9]*[a-zA-Z0-9])*){1,2}
tDATE [0-9]{2}[.][0-9]{2}[.][0-9]{4}|[0-9]{2}[/][0-9]{2}[/][0-9]{4}|[0-9]{2}[-][0-9]{2}[-][0-9]{4}
tSTRING \"([^"]*)\"      
tTIME [0-9]{2}[:][0-9]{2}
tIDENT [_a-zA-Z][_a-zA-Z0-9]*

%{
    int lineNum=1;
%}

%{
    int comment_nesting = 0;
%}

 
%%

\n lineNum++;



"/*"             { BEGIN(SC_COMMENT);}
<SC_COMMENT>{
  "/*"           { ++comment_nesting; }
  "*"+"/"        { if (comment_nesting) --comment_nesting;
                   else BEGIN(INITIAL); }
  "*"+           ; 
  [^/*\n]+       ;
  [/]            ; 
  \n   {lineNum++;}          ; 
}




{tTIME}	{
    char hour[3];
    char minute[3];

    sscanf(yytext, "%2[^:]:%2s", hour, minute);
    printf("%d_tTIME_(Hour_%s_Minute_%s)\n", lineNum, hour, minute);
}

{tDATE}	{
    char day[3];
    char month[3];
    char year[5];

    sscanf(yytext, "%2[^/.-]/%2[^/.-]/%4s", day, month, year);
    printf("%d_tDATE_(Day_%s_Month_%s_Year_%s)\n", lineNum, day, month, year);
}

{tADDRESS} printf("%d_tADDRESS_(%s)\n", lineNum, yytext);

{tMAIL}	printf("%d_tMAIL\n", lineNum);
{tSCHEDULE}	printf("%d_tSCHEDULE\n", lineNum);
{tENDMAIL} printf("%d_tENDMAIL\n", lineNum);
{tENDSCHEDULE} printf("%d_tENDSCHEDULE\n", lineNum);
{tSEND}	printf("%d_tSEND\n", lineNum);
{tTO} printf("%d_tTO\n", lineNum);
{tFROM}	printf("%d_tFROM\n", lineNum);
{tSET} printf("%d_tSET\n", lineNum);
{tCOMMA} printf("%d_tCOMMA\n", lineNum);
{tCOLON} printf("%d_tCOLON\n", lineNum);
{tLPR} printf("%d_tLPR\n", lineNum);
{tRPR} printf("%d_tRPR\n", lineNum);
{tLBR} printf("%d_tLBR\n", lineNum);
{tRBR} printf("%d_tRBR\n", lineNum);
{tAT} printf("%d_tAT\n", lineNum);

{tSTRING} {
    char str[1007];
    int i=0;
    while(i<= yyleng-2) {

        if(i== yyleng-2) {
            str[i]='\0';
        }
        else {
            str[i]= yytext[i+1];
        }

        i++;
    }

    printf("%d_tSTRING_(%s)\n", lineNum,str);
    
    if (strchr(yytext, '\n')) {
        lineNum++;
	}
}

{tIDENT}	printf("%d_tIDENT_(%s)\n", lineNum, yytext);

\/\/[^\n\r]* 
" " 
. printf("%d_ILLEGAL_CHARACTER_(%s)\n", lineNum, yytext);



%%
int main(){

yylex();
return (0);
}
